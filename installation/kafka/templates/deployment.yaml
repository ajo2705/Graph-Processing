apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka.fullname" . }}
  labels:
    {{- include "kafka.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "kafka.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kafka.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.ext_port }}
              protocol: TCP
          env:
            - name: KAFKA_BROKER_ID
              value: "{{ .Values.env.KAFKA_BROKER_ID }}"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ .Values.env.KAFKA_ZOOKEEPER_CONNECT }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://localhost:{{ .Values.service.ext_port }},  PLAINTEXT_INTERNAL://kafka-service:{{ .Values.service.int_port }}"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "{{ .Values.env.KAFKA_LISTENER_SECURITY_PROTOCOL_MAP }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "{{ .Values.env.KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }}"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "{{ .Values.env.KAFKA_AUTO_CREATE_TOPICS_ENABLE }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
